{"version":3,"sources":["view/Administrator/TrxParam/index.js","services/General/index.js","services/TrxParam/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js","view/Administrator/TrxParam/styles.module.scss"],"names":["columns","t","Header","foldable","accessor","filterable","sorteable","width","Cell","row","className","styles","eliminar","alt","name","TrxParam","props","getData","axios","all","getPlantas","getAllTrxParam","getAllTRX","then","values","setState","plantas","data","trxparam","trxs","filter","v","trx","catch","error","console","response","status","ifYouCan","componentDidMount","handleInputChange","event","newTRX","state","target","value","handlerSubmit","e","wait","preventDefault","mode","trxId","createTrxParam","descr","trxName","valor","trxValue","id_planta","parseInt","trxPlanta","id_trx","trxTransac","msg","undefined","message","editTrxParam","id","code","handlerClear","handlerGridAction","rowInfo","column","instance","onClick","original","planta","window","confirm","handlerDelete","handlerSelectChange","eliminarTrxParam","_columns","trxEstado","ifYouAddRole","this","direction","padding","margin","wrap","height","auto","round","title","role","icon","shadow","items","allroles","itemId","itemText","onSelect","visible","type","loading","disabled","text","classes","btn","onPress","handlerGoAddRoles","msgPermisos","label","placeholder","autocomplete","required","onChange","styleType","sortable","multiSort","resizable","defaultPageSize","getTdProps","previousText","nextText","loadingText","noDataText","pageText","ofText","rowsText","PureComponent","withTranslation","method","url","getTurnos","groupByParams","xs","key","reduce","rv","x","push","getTrxParamByPlantaAndTrx","param","checkTrxParamsNeed","getting","need","a","arrayParam","Object","keys","length","every","includes","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/15.70a52d60.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport Flex from '../../../components/Flex';\r\nimport Column from '../../../components/Column';\r\nimport Input from '../../../components/Input';\r\nimport Button from '../../../components/Button';\r\nimport {\r\n  getAllTrxParam,\r\n  createTrxParam,\r\n  editTrxParam,\r\n  eliminarTrxParam,\r\n} from '../../../services/TrxParam';\r\nimport styles from './styles.module.scss';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport {LoaderViewError} from '../../../actions.js';\r\nimport ComboBox from '../../../components/ComboBox';\r\nimport {Icon} from 'react-fa';\r\nimport {getPlantas} from '../../../services/General';\r\nimport {getAllTRX} from '../../../services/Transacciones';\r\nimport axios from 'axios';\r\n\r\nconst columns = (t) => {\r\n  return [\r\n    {\r\n      Header: t('trxparam.title'),\r\n      foldable: true,\r\n      columns: [\r\n        {\r\n          Header: 'ID',\r\n          accessor: 'id',\r\n        },\r\n        {\r\n          Header: t('trxparam.planta'),\r\n          accessor: 'planta.descripcion',\r\n          // Cell: (props) => <span className=\"number\">{props.value}</span>, // Custom cell components!\r\n        },\r\n        {\r\n          accessor: 'trx.trx',\r\n          Header: t('trxparam.trx'),\r\n          // accessor: d => d.friend.name // Custom value accessors!\r\n        },\r\n        {\r\n          accessor: 'descr',\r\n          Header: t('trxparam.descr'),\r\n          filterable: false,\r\n          // sorteable: false,\r\n          // Cell: (row) => {\r\n          //   return <Icon name={row.original.icon} />;\r\n          // },\r\n          // accessor: d => d.friend.name // Custom value accessors!\r\n        },\r\n        {\r\n          accessor: 'valor',\r\n          Header: t('trxparam.valor'),\r\n        },\r\n        {\r\n          Header: '',\r\n          filterable: false,\r\n          sorteable: false,\r\n          width: 40,\r\n          Cell: (row) => (\r\n            <button className={styles.eliminar} alt={t('general.eliminar')}>\r\n              <Icon name=\"close\" />\r\n            </button>\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n};\r\n// const columnsRoles = (t) => {\r\n//   return [\r\n//     {\r\n//       Header: t('roles.roles'),\r\n//       foldable: true,\r\n//       columns: [\r\n//         {\r\n//           Header: 'ID',\r\n//           accessor: 'id',\r\n//           show: false,\r\n//         },\r\n//         {\r\n//           Header: t('roles.name'),\r\n//           accessor: 'name',\r\n//         },\r\n//         {\r\n//           accessor: 'description',\r\n//           Header: t('roles.description'),\r\n//         },\r\n//         {\r\n//           accessor: 'created',\r\n//           Header: t('roles.created'),\r\n//           show: false,\r\n//           Cell: (row) => {\r\n//             return (\r\n//               <Moment\r\n//                 locale={localStorage.getItem('i18nextLng')}\r\n//                 format=\"DD-MM-YYYY HH:mm\"\r\n//               >\r\n//                 {row.original.created}\r\n//               </Moment>\r\n//             );\r\n//           },\r\n//         },\r\n//         {\r\n//           accessor: 'modified',\r\n//           Header: t('roles.modified'),\r\n//           show: false,\r\n//           Cell: (row) => {\r\n//             return (\r\n//               <Moment\r\n//                 locale={localStorage.getItem('i18nextLng')}\r\n//                 format=\"DD-MM-YYYY HH:mm\"\r\n//               >\r\n//                 {row.original.modified}\r\n//               </Moment>\r\n//             );\r\n//           },\r\n//         },\r\n//         {\r\n//           Header: '',\r\n//           filterable: false,\r\n//           sortable: false,\r\n//           width: 40,\r\n//           Cell: (row) => (\r\n//             <button className={styles.eliminar} alt={t('general.eliminar')}>\r\n//               <Icon name=\"close\" />\r\n//             </button>\r\n//           ),\r\n//         },\r\n//       ],\r\n//     },\r\n//   ];\r\n// };\r\n\r\nclass TrxParam extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this._columns = columns;\r\n    this.state = {\r\n      trx: {\r\n        trxId: '',\r\n        trxPlanta: '',\r\n        trxTransac: '',\r\n        trxName: '',\r\n        trxValue: '',\r\n        trxEstado: '',\r\n      },\r\n      plantas: [],\r\n      trxparam: [],\r\n      trxs: [],\r\n      ifYouCan: true,\r\n      ifYouAddRole: false,\r\n      msg: '',\r\n      mode: 'crear',\r\n      wait: false,\r\n    };\r\n  }\r\n\r\n  getData = () => {\r\n    axios\r\n      .all([getPlantas(), getAllTrxParam(), getAllTRX()])\r\n      .then((values) => {\r\n        this.setState({\r\n          plantas: values[0].data,\r\n          trxparam: values[1].data,\r\n          trxs: values[2].data.filter((v) => v.trx !== 'title'),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.response);\r\n        if (error.response.status === 401) {\r\n          this.setState({ifYouCan: false});\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getData();\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    let newTRX = {\r\n      ...this.state.trx,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    this.setState({trx: newTRX});\r\n  };\r\n\r\n  handlerSubmit = (e) => {\r\n    this.setState({wait: true});\r\n    let t = this;\r\n    e.preventDefault();\r\n\r\n    if (this.state.mode === 'crear' && this.state.trx.trxId === '') {\r\n      createTrxParam({\r\n        descr: this.state.trx.trxName,\r\n        valor: this.state.trx.trxValue,\r\n        id_planta: parseInt(this.state.trx.trxPlanta),\r\n        id_trx: parseInt(this.state.trx.trxTransac),\r\n      })\r\n        .then((response) => {\r\n          this.getData();\r\n          this.props.t('trxparam.create');\r\n          this.setState({\r\n            ...this.state,\r\n            trx: {\r\n              trxId: '',\r\n              trxPlanta: '',\r\n              trxTransac: '',\r\n              trxName: '',\r\n              trxValue: '',\r\n            },\r\n            mode: 'crear',\r\n            wait: false,\r\n            msg: this.props.t('trxparam.creadoOk'),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({wait: false});\r\n          console.error(error.response);\r\n          t.setState({\r\n            msg:\r\n              error.response !== undefined\r\n                ? this.props.t('trxparam.' + error.response.data.error.message)\r\n                : this.props.t('trxparam.error'),\r\n          });\r\n        });\r\n    } else {\r\n      editTrxParam({\r\n        descr: this.state.trx.trxName,\r\n        valor: this.state.trx.trxValue,\r\n        id_planta: parseInt(this.state.trx.trxPlanta),\r\n        id_trx: parseInt(this.state.trx.trxTransac),\r\n        id: parseInt(this.state.trx.trxId),\r\n      })\r\n        .then((response) => {\r\n          this.getData();\r\n          this.setState({\r\n            ...this.state,\r\n            trx: {\r\n              trxId: '',\r\n              trxPlanta: '',\r\n              trxTransac: '',\r\n              trxName: '',\r\n              trxValue: '',\r\n            },\r\n            mode: 'crear',\r\n            wait: false,\r\n            msg: this.props.t('trxparam.modificadoOk'),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({wait: false});\r\n          console.error(error.response);\r\n          t.setState({\r\n            msg:\r\n              error.response !== undefined\r\n                ? this.props.t('trxparam.' + error.response.data.error.code)\r\n                : this.props.t('trxparam.error'),\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handlerClear = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      trx: {\r\n        trxId: '',\r\n        trxPlanta: '',\r\n        trxTransac: '',\r\n        trxName: '',\r\n        trxValue: '',\r\n      },\r\n      mode: 'crear',\r\n      wait: false,\r\n      msg: '',\r\n    });\r\n  };\r\n\r\n  handlerGridAction = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onClick: (e) => {\r\n        this.setState({\r\n          trx: {\r\n            trxId: rowInfo.original.id,\r\n            trxPlanta: rowInfo.original.planta.id,\r\n            trxTransac: rowInfo.original.trx.id,\r\n            trxName: rowInfo.original.descr,\r\n            trxValue: rowInfo.original.valor,\r\n          },\r\n          msg: '',\r\n          mode: 'editar',\r\n        });\r\n        // this.getTRXRoles(rowInfo.original.id);\r\n        if (column.Header === '') {\r\n          let r = window.confirm(this.props.t('general.estaseguro'));\r\n          if (r === true) {\r\n            this.handlerDelete(rowInfo.original.id);\r\n          } else {\r\n            this.handlerClear();\r\n          }\r\n        }\r\n      },\r\n    };\r\n  };\r\n\r\n  // handlerGridRolesAction = (state, rowInfo, column, instance) => {\r\n  //   return {\r\n  //     onClick: (e) => {\r\n  //       this.setState({\r\n  //         rol: {\r\n  //           id: rowInfo.original.id,\r\n  //           name: rowInfo.original.name,\r\n  //           description: rowInfo.original.description,\r\n  //           created: rowInfo.original.created,\r\n  //           modified: rowInfo.original.modified,\r\n  //         },\r\n  //         msg: '',\r\n  //         mode: 'editar',\r\n  //       });\r\n  //       if (column.Header === '') {\r\n  //         let r = window.confirm(this.props.t('general.estaseguro'));\r\n  //         if (r === true) {\r\n  //           this.handlerDeleteRol(this.state.trx.id, rowInfo.original.id);\r\n  //         } else {\r\n  //           this.handlerClear();\r\n  //         }\r\n  //       }\r\n  //     },\r\n  //   };\r\n  // };\r\n\r\n  // handlerAddRole = () => {\r\n  //   let t = this;\r\n  // addTRXToRol(this.state.trx.id, this.state.rolSelected)\r\n  //   .then((response) => {\r\n  //     // this.handlerClear();\r\n  //     this.getData();\r\n  //     this.setState({\r\n  //       msg: this.props.t('trxparam.roleAdded'),\r\n  //     });\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.error(error.response);\r\n  //     t.setState({\r\n  //       msg:\r\n  //         error.response !== undefined\r\n  //           ? this.props.t('trxparam.' + error.response.data.error.code)\r\n  //           : this.props.t('trxparam.error'),\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  // handlerGoAddRoles = () => {\r\n  //   this.setState((prevState) => {\r\n  //     return {msg: '', ifYouAddRole: !prevState.ifYouAddRole};\r\n  //   });\r\n  // };\r\n\r\n  handlerSelectChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      trx: {...this.state.trx, [e.target.id]: e.target.value},\r\n    });\r\n  };\r\n\r\n  // handlerDeleteRol = (id, role) => {\r\n  // let t = this;\r\n  // findTRXRole(id, role).then((response) => {\r\n  //   removeTRXFromRol(response.data[0].id)\r\n  //     .then(() => {\r\n  //       this.getData();\r\n  //       this.setState({\r\n  //         msg: this.props.t('usuarios.roleDeleted'),\r\n  //       });\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error.response);\r\n  //       t.setState({\r\n  //         msg:\r\n  //           error.response !== undefined\r\n  //             ? this.props.t('usuarios.' + error.response.data.error.code)\r\n  //             : this.props.t('usuarios.error'),\r\n  //       });\r\n  //     });\r\n  // });\r\n  // };\r\n\r\n  handlerDelete = (id) => {\r\n    let t = this;\r\n    eliminarTrxParam(id)\r\n      .then((response) => {\r\n        this.handlerClear();\r\n        this.getData();\r\n        this.setState({\r\n          msg: this.props.t('trxparam.eliminadoOK'),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.response);\r\n        t.setState({\r\n          msg:\r\n            error.response !== undefined\r\n              ? this.props.t('trxparam.' + error.response.data.error.code)\r\n              : this.props.t('trxparam.error'),\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return this.state.ifYouCan ? (\r\n      !this.state.ifYouAddRole ? (\r\n        <Flex direction=\"columns\" padding=\"0\" margin=\"0\" wrap=\"wrap\">\r\n          <Column height=\"100%\" padding=\"0\" width=\"25%\" auto={true}>\r\n            <Flex\r\n              direction=\"column\"\r\n              padding=\"0\"\r\n              margin=\"0\"\r\n              wrap=\"nowrap\"\r\n              round=\"3px\"\r\n            >\r\n              <div className={styles.title}>\r\n                <h3>\r\n                  {this.state.mode === 'crear'\r\n                    ? this.props.t('trxparam.newTRX')\r\n                    : this.props.t('trxparam.modificarTRX', {\r\n                        trx: this.state.trx.name,\r\n                      })}\r\n                </h3>\r\n              </div>\r\n              <div className={styles.icon}>\r\n                <span className=\"fa-stack fa-lg\">\r\n                  <i\r\n                    className={\r\n                      'fa fa-circle fa-stack-2x fa-inverse ' + styles.shadow\r\n                    }\r\n                  />\r\n                  <i className=\"fa fa-rocket fa-stack-1x \" />\r\n                </span>\r\n              </div>\r\n              <div className=\"padding-default\">\r\n                <ComboBox\r\n                  id=\"trxPlanta\"\r\n                  label={this.props.t('general.planta')}\r\n                  items={this.state.plantas}\r\n                  itemId=\"id\"\r\n                  itemText=\"descripcion\"\r\n                  value={this.state.trx.trxPlanta}\r\n                  onSelect={this.handlerSelectChange}\r\n                />\r\n                <ComboBox\r\n                  id=\"trxTransac\"\r\n                  label={this.props.t('trxparam.trx')}\r\n                  items={this.state.trxs}\r\n                  itemId=\"id\"\r\n                  itemText=\"trx\"\r\n                  value={this.state.trx.trxTransac}\r\n                  onSelect={this.handlerSelectChange}\r\n                />\r\n                <Input\r\n                  id=\"trxName\"\r\n                  type=\"text\"\r\n                  label={this.props.t('trxparam.descr')}\r\n                  placeholder={this.props.t('trxparam.descr')}\r\n                  autocomplete={false}\r\n                  required={true}\r\n                  value={this.state.trx.trxName || ''}\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                <Input\r\n                  id=\"trxValue\"\r\n                  type=\"text\"\r\n                  label={this.props.t('trxparam.valor')}\r\n                  placeholder={this.props.t('trxparam.valor')}\r\n                  autocomplete={false}\r\n                  required={true}\r\n                  value={this.state.trx.trxValue || ''}\r\n                  onChange={this.handleInputChange}\r\n                />\r\n\r\n                <div className=\"center\">\r\n                  <Button\r\n                    visible={true}\r\n                    loading={this.state.wait}\r\n                    disabled={\r\n                      this.state.trx.trxPlanta === '' ||\r\n                      this.state.trx.trxTransac === '' ||\r\n                      this.state.trx.trxName === '' ||\r\n                      this.state.trx.trxValue === ''\r\n                    }\r\n                    text={\r\n                      this.state.mode === 'editar'\r\n                        ? this.props.t('general.editar')\r\n                        : this.props.t('general.crear')\r\n                    }\r\n                    styleType=\"success\"\r\n                    id=\"guardar\"\r\n                    icon=\"user\"\r\n                    width=\"100%\"\r\n                    classes={styles.btn}\r\n                    onPress={this.handlerSubmit}\r\n                  />\r\n                  {/* <Button\r\n                    visible={this.state.mode === 'editar' ? true : false}\r\n                    loading={this.state.wait}\r\n                    disabled={this.state.wait}\r\n                    text={this.props.t('trxparam.addrole')}\r\n                    styleType=\"info\"\r\n                    id=\"addRoleToTrx\"\r\n                    icon=\"shield\"\r\n                    width=\"100%\"\r\n                    classes={styles.btn}\r\n                    onPress={this.handlerGoAddRoles}\r\n                  /> */}\r\n                  {/* <br /> */}\r\n                  <Button\r\n                    visible={this.state.mode === 'editar' ? true : false}\r\n                    type=\"outline\"\r\n                    loading={this.state.wait}\r\n                    disabled={this.state.wait}\r\n                    text={this.props.t('general.cancelar')}\r\n                    id=\"cancelar\"\r\n                    icon=\"eraser\"\r\n                    width=\"100%\"\r\n                    classes={styles.btn}\r\n                    onPress={this.handlerClear}\r\n                  />\r\n\r\n                  <div className=\"center\">{this.state.msg}</div>\r\n                </div>\r\n              </div>\r\n            </Flex>\r\n          </Column>\r\n          <Column height=\"100%\" padding=\"0\" width=\"74%\" auto={true}>\r\n            <ReactTable\r\n              className=\"-striped -highlight\"\r\n              data={this.state.trxparam}\r\n              columns={columns(this.props.t)}\r\n              sortable={true}\r\n              multiSort={true}\r\n              resizable={true}\r\n              filterable={true}\r\n              defaultPageSize={25}\r\n              getTdProps={this.handlerGridAction}\r\n              previousText={this.props.t('general.previous')}\r\n              nextText={this.props.t('general.next')}\r\n              loadingText={this.props.t('general.loading')}\r\n              noDataText={this.props.t('general.norowsfound')}\r\n              pageText={this.props.t('general.page')}\r\n              ofText={this.props.t('general.of')}\r\n              rowsText={this.props.t('general.rows')}\r\n            />\r\n          </Column>\r\n        </Flex>\r\n      ) : (\r\n        <Flex direction=\"columns\" padding=\"0\" margin=\"0\" wrap=\"wrap\">\r\n          <Column height=\"100%\" padding=\"0\" width=\"25%\" auto={true}>\r\n            <Flex\r\n              direction=\"column\"\r\n              padding=\"0\"\r\n              margin=\"0\"\r\n              wrap=\"nowrap\"\r\n              round=\"3px\"\r\n            >\r\n              <div className={styles.title}>\r\n                <h3>\r\n                  {this.props.t('trxparam.addrole', {\r\n                    role: this.state.trx.name,\r\n                  })}\r\n                </h3>\r\n              </div>\r\n              <div className={styles.icon}>\r\n                <span className=\"fa-stack fa-lg\">\r\n                  <i\r\n                    className={\r\n                      'fa fa-circle fa-stack-2x fa-inverse ' + styles.shadow\r\n                    }\r\n                  />\r\n                  <i className=\"fa fa-rocket fa-stack-1x \" />\r\n                </span>\r\n              </div>\r\n              <div className=\"padding-default\">\r\n                <ComboBox\r\n                  id=\"RolesToTrx\"\r\n                  items={this.state.allroles}\r\n                  itemId=\"id\"\r\n                  itemText=\"name\"\r\n                  onSelect={this.handlerSelectChange}\r\n                />\r\n                <Button\r\n                  visible={this.state.mode === 'editar' ? true : false}\r\n                  type=\"outline\"\r\n                  loading={this.state.wait}\r\n                  disabled={this.state.wait}\r\n                  text={this.props.t('general.volver')}\r\n                  id=\"volverToTxr\"\r\n                  icon=\"arrow-left\"\r\n                  width=\"100%\"\r\n                  classes={styles.btn}\r\n                  onPress={this.handlerGoAddRoles}\r\n                />\r\n                {/* <Button\r\n                  visible={true}\r\n                  loading={this.state.wait}\r\n                  disabled={this.state.rolSelected === ''}\r\n                  text={this.props.t('trxparam.addrole')}\r\n                  styleType=\"success\"\r\n                  id=\"addRoleToTRX\"\r\n                  icon=\"shield\"\r\n                  width=\"100%\"\r\n                  classes={styles.btn}\r\n                  onPress={this.handlerAddRole}\r\n                /> */}\r\n                <br />\r\n                <div className=\"center\">{this.state.msg}</div>\r\n              </div>\r\n              <div className=\"center\">{this.state.msgPermisos}</div>\r\n            </Flex>\r\n          </Column>\r\n          {/* <Column height=\"100%\" padding=\"0\" width=\"74%\" auto={true}>\r\n            <ReactTable\r\n              className=\"-striped -highlight\"\r\n              data={this.state.roles}\r\n              columns={columnsRoles(this.props.t)}\r\n              sortable={true}\r\n              multiSort={true}\r\n              resizable={true}\r\n              filterable={true}\r\n              defaultPageSize={5}\r\n              getTdProps={this.handlerGridRolesAction}\r\n              previousText={this.props.t('general.previous')}\r\n              nextText={this.props.t('general.next')}\r\n              loadingText={this.props.t('general.loading')}\r\n              noDataText={this.props.t('general.norowsfound')}\r\n              pageText={this.props.t('general.page')}\r\n              ofText={this.props.t('general.of')}\r\n              rowsText={this.props.t('general.rows')}\r\n            />\r\n          </Column> */}\r\n        </Flex>\r\n      )\r\n    ) : (\r\n      <Flex direction=\"columns\" padding=\"0\" margin=\"0\" wrap=\"wrap\">\r\n        <Column height=\"100vh\">\r\n          <LoaderViewError\r\n            icon=\"401\"\r\n            title={this.props.t('error.noAuth')}\r\n            message={this.props.t('error.noAuthMessage')}\r\n          />\r\n        </Column>\r\n      </Flex>\r\n    );\r\n  }\r\n}\r\nexport default withTranslation()(TrxParam);\r\n","import axios from 'axios';\r\n\r\nfunction getPlantas() {\r\n  return axios({\r\n    method: 'GET',\r\n    url: '../plantas',\r\n  });\r\n}\r\n\r\nfunction getEmpresas() {\r\n  return axios({\r\n    method: 'GET',\r\n    url: '../empresas',\r\n  });\r\n}\r\n\r\nfunction getTurnos(planta) {\r\n  return axios({\r\n    method: 'GET',\r\n    url: '../prd-turnos?filter={\"where\":{\"idPlanta\":' + planta + '}}',\r\n  });\r\n}\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport {getTurnos, getEmpresas, getPlantas};\r\n","import axios from 'axios';\r\n\r\nfunction groupByParams(xs, key) {\r\n  return xs.reduce(function (rv, x) {\r\n    (rv[x[key]] = rv[x[key]] || []).push(x);\r\n    return rv;\r\n  }, {});\r\n}\r\n\r\nfunction getAllTrxParam() {\r\n  return axios({\r\n    method: 'GET',\r\n    url:\r\n      '../trxparams?filter[include][0][relation]=planta&filter[include][1][relation]=trx',\r\n  });\r\n}\r\n\r\nfunction getTrxParam(planta) {\r\n  return axios({\r\n    method: 'GET',\r\n    url: '../trxparams?filter={\"where\":{\"idPlanta\":' + planta + '}}',\r\n  });\r\n}\r\n\r\nfunction getTrxParamByPlantaAndTrx(planta, trx) {\r\n  return axios({\r\n    method: 'GET',\r\n    url:\r\n      '../trxparams?filter={\"where\":{\"id_planta\":' +\r\n      planta +\r\n      ',\"id_trx\":' +\r\n      trx +\r\n      '}}',\r\n  });\r\n}\r\n\r\nfunction createTrxParam(param) {\r\n  return axios({method: 'POST', url: '../trxparams', data: param});\r\n}\r\n\r\nfunction editTrxParam(param) {\r\n  return axios({\r\n    method: 'PUT',\r\n    url: '../trxparams/' + param.id,\r\n    data: param,\r\n  });\r\n}\r\n\r\nfunction eliminarTrxParam(id) {\r\n  return axios({\r\n    method: 'DELETE',\r\n    url: '../trxparams/' + id,\r\n  });\r\n}\r\n\r\nasync function checkTrxParamsNeed(getting, need) {\r\n  if (!getting || !need) return;\r\n  let arrayParam = await groupByParams(getting, 'descr');\r\n  if (Object.keys(arrayParam).length !== need.length) return;\r\n  return Object.keys(arrayParam).every((e) => need.includes(e));\r\n}\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport {\r\n  getTrxParam,\r\n  getAllTrxParam,\r\n  createTrxParam,\r\n  editTrxParam,\r\n  eliminarTrxParam,\r\n  getTrxParamByPlantaAndTrx,\r\n  checkTrxParamsNeed,\r\n  groupByParams,\r\n};\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1VeOi\",\"icon\":\"styles_icon__3mjXZ\",\"shadow\":\"styles_shadow__ueKyX\",\"title\":\"styles_title__2d4NK\",\"eliminar\":\"styles_eliminar__1E8cM\",\"btn\":\"styles_btn__2Yoz4\"};"],"sourceRoot":""}